version: '3.7'

services:
  mongodb:
    image: mongo
    container_name: fgo-db
    environment:
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./mongo-volume:/data/db
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
      - financial_go-net

  backend:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: fgo-backend
    environment:
      - APP_ENV=${APP_ENV}
      - FLASK_PORT=${FLASK_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - mongodb
    restart: always
    volumes:
      - ./api/:/api
    ports:
      - ${FLASK_PORT}:${FLASK_PORT}
    networks:
      - financial_go-net

  frontend:
    build:
      context: ./client/
      dockerfile: Dockerfile
    container_name: fgo-frontend
    environment:
      - NODEJS_PORT=${NODEJS_PORT}
      - NODE_ENV=${NODE_ENV}
    restart: always
    volumes:
      - ./client/:/client
      - node_modules:/client/node_modules
    ports:
      - ${NODEJS_PORT}:80
    networks:
      - financial_go-net

volumes:
  node_modules:

networks:
  financial_go-net:
    driver: bridge
